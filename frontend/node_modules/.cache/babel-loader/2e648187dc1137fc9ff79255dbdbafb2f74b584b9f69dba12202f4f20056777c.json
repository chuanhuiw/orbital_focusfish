{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandh\\\\focusfish\\\\frontend\\\\src\\\\components\\\\Pomodoro\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pomodoro = () => {\n  _s();\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    window.location.reload();\n  };\n  const [mode, setMode] = useState('pomodoro');\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const modeDurations = {\n    pomodoro: 25 * 60,\n    shortBreak: 5 * 60,\n    longBreak: 15 * 60\n  };\n  useEffect(() => {\n    let interval = null;\n    const totalDuration = modeDurations[mode];\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(interval);\n            setIsActive(false);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        } else {\n          setSeconds(seconds - 1);\n        }\n        const elapsedTime = totalDuration - (minutes * 60 + seconds);\n        setProgress(elapsedTime / totalDuration * 100);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, minutes, seconds]);\n  const handleModeChange = newMode => {\n    setMode(newMode);\n    switch (newMode) {\n      case 'pomodoro':\n        setMinutes(25);\n        break;\n      case 'shortBreak':\n        setMinutes(5);\n        break;\n      case 'longBreak':\n        setMinutes(15);\n        break;\n      default:\n        break;\n    }\n    setSeconds(0);\n    setIsActive(false);\n    setProgress(0);\n  };\n  const toggleStartStop = () => {\n    setIsActive(!isActive);\n  };\n  const resetTimer = () => {\n    switch (mode) {\n      case 'pomodoro':\n        setMinutes(25);\n        break;\n      case 'shortBreak':\n        setMinutes(5);\n        break;\n      case 'longBreak':\n        setMinutes(15);\n        break;\n      default:\n        break;\n    }\n    setSeconds(0);\n    setIsActive(false);\n    setProgress(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"FocusFish \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.logout_btn,\n          onClick: handleLogout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      id: \"js-progress\",\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.timer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonGroup,\n        id: \"js-mode-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-mode\": \"pomodoro\",\n          className: `${styles.button} ${styles.modeButton} ${mode === 'pomodoro' ? styles.active : ''}`,\n          onClick: () => handleModeChange('pomodoro'),\n          id: \"js-pomodoro\",\n          children: \"Pomodoro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-mode\": \"shortBreak\",\n          className: `${styles.button} ${styles.modeButton} ${mode === 'shortBreak' ? styles.active : ''}`,\n          onClick: () => handleModeChange('shortBreak'),\n          id: \"js-short-break\",\n          children: \"Short break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-mode\": \"longBreak\",\n          className: `${styles.button} ${styles.modeButton} ${mode === 'longBreak' ? styles.active : ''}`,\n          onClick: () => handleModeChange('longBreak'),\n          id: \"js-long-break\",\n          children: \"Long break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.clock,\n        id: \"js-clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"js-minutes\",\n          children: String(minutes).padStart(2, '0')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.separator,\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"js-seconds\",\n          children: String(seconds).padStart(2, '0')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.mainButton,\n          \"data-action\": \"start\",\n          id: \"js-btn\",\n          onClick: toggleStartStop,\n          children: isActive ? 'Stop' : 'Start'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.resetButton,\n          \"data-action\": \"reset\",\n          onClick: resetTimer,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Pomodoro, \"aCflAs+uXDUU/sN2wqLLijkkg4c=\");\n_c = Pomodoro;\nexport default Pomodoro;\nvar _c;\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Pomodoro","_s","handleLogout","localStorage","removeItem","window","location","reload","mode","setMode","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","progress","setProgress","modeDurations","pomodoro","shortBreak","longBreak","interval","totalDuration","setInterval","clearInterval","elapsedTime","handleModeChange","newMode","toggleStartStop","resetTimer","className","app","children","logout_btn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","value","max","progressBar","timer","buttonGroup","button","modeButton","active","clock","String","padStart","separator","mainButton","resetButton","_c","$RefreshReg$"],"sources":["C:/Users/nandh/focusfish/frontend/src/components/Pomodoro/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst Pomodoro = () => {\r\n    const handleLogout = () => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        window.location.reload();\r\n    }\r\n\r\n  const [mode, setMode] = useState('pomodoro');\r\n  const [minutes, setMinutes] = useState(25);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const modeDurations = {\r\n    pomodoro: 25*60,\r\n    shortBreak: 5*60,\r\n    longBreak: 15*60,\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    const totalDuration= modeDurations[mode];\r\n\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            clearInterval(interval);\r\n            setIsActive(false);\r\n          } else {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n          }\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n        }\r\n        const elapsedTime = totalDuration - (minutes*60 + seconds);\r\n        setProgress((elapsedTime / totalDuration) * 100);\r\n      }, 1000);\r\n    } else if (!isActive && seconds !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isActive, minutes, seconds]);\r\n\r\n  const handleModeChange = (newMode) => {\r\n    setMode(newMode);\r\n    switch (newMode) {\r\n      case 'pomodoro':\r\n        setMinutes(25);\r\n        break;\r\n      case 'shortBreak':\r\n        setMinutes(5);\r\n        break;\r\n      case 'longBreak':\r\n        setMinutes(15);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setSeconds(0);\r\n    setIsActive(false);\r\n    setProgress(0);\r\n  };\r\n\r\n  const toggleStartStop = () => {\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    switch (mode) {\r\n      case 'pomodoro':\r\n        setMinutes(25);\r\n        break;\r\n      case 'shortBreak':\r\n        setMinutes(5);\r\n        break;\r\n      case 'longBreak':\r\n        setMinutes(15);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setSeconds(0);\r\n    setIsActive(false);\r\n    setProgress(0);\r\n  };\r\n\r\n  return (\r\n    <main className={styles.app}>\r\n        <header>\r\n            <h1>FocusFish <button className={styles.logout_btn} onClick={handleLogout}>Log out</button></h1> \r\n        </header> \r\n      <progress id=\"js-progress\" value={progress} max=\"100\"></progress>\r\n      <div className={styles.progressBar}></div>\r\n      <div className={styles.timer}>\r\n        <div className={styles.buttonGroup} id=\"js-mode-buttons\">\r\n          <button\r\n            data-mode=\"pomodoro\"\r\n            className={`${styles.button} ${styles.modeButton} ${mode === 'pomodoro' ? styles.active : ''}`}\r\n            onClick={() => handleModeChange('pomodoro')}\r\n            id=\"js-pomodoro\"\r\n          >\r\n            Pomodoro\r\n          </button>\r\n          <button\r\n            data-mode=\"shortBreak\"\r\n            className={`${styles.button} ${styles.modeButton} ${mode === 'shortBreak' ? styles.active : ''}`}\r\n            onClick={() => handleModeChange('shortBreak')}\r\n            id=\"js-short-break\"\r\n          >\r\n            Short break\r\n          </button>\r\n          <button\r\n            data-mode=\"longBreak\"\r\n            className={`${styles.button} ${styles.modeButton} ${mode === 'longBreak' ? styles.active : ''}`}\r\n            onClick={() => handleModeChange('longBreak')}\r\n            id=\"js-long-break\"\r\n          >\r\n            Long break\r\n          </button>\r\n        </div>\r\n        <div className={styles.clock} id=\"js-clock\">\r\n          <span id=\"js-minutes\">{String(minutes).padStart(2, '0')}</span>\r\n          <span className={styles.separator}>:</span>\r\n          <span id=\"js-seconds\">{String(seconds).padStart(2, '0')}</span>\r\n        </div>\r\n        <div className={styles.buttonGroup}>\r\n          <button className={styles.mainButton} data-action=\"start\" id=\"js-btn\" onClick={toggleStartStop}>\r\n            {isActive ? 'Stop' : 'Start'}\r\n          </button>\r\n          <button className={styles.resetButton} data-action=\"reset\" onClick={resetTimer}>\r\n          Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Pomodoro;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}